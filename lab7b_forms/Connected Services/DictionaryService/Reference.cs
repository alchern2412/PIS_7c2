//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lab7b_forms.DictionaryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DictionaryService.IDictionaryService")]
    public interface IDictionaryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetRecords", ReplyAction="http://tempuri.org/IDictionaryService/GetRecordsResponse")]
        Models.Record[] GetRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetRecords", ReplyAction="http://tempuri.org/IDictionaryService/GetRecordsResponse")]
        System.Threading.Tasks.Task<Models.Record[]> GetRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/AddRecord", ReplyAction="http://tempuri.org/IDictionaryService/AddRecordResponse")]
        void AddRecord(string name, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/AddRecord", ReplyAction="http://tempuri.org/IDictionaryService/AddRecordResponse")]
        System.Threading.Tasks.Task AddRecordAsync(string name, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/UpdRecord", ReplyAction="http://tempuri.org/IDictionaryService/UpdRecordResponse")]
        void UpdRecord(int id, string name, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/UpdRecord", ReplyAction="http://tempuri.org/IDictionaryService/UpdRecordResponse")]
        System.Threading.Tasks.Task UpdRecordAsync(int id, string name, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/DelRecord", ReplyAction="http://tempuri.org/IDictionaryService/DelRecordResponse")]
        void DelRecord(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/DelRecord", ReplyAction="http://tempuri.org/IDictionaryService/DelRecordResponse")]
        System.Threading.Tasks.Task DelRecordAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDictionaryServiceChannel : lab7b_forms.DictionaryService.IDictionaryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictionaryServiceClient : System.ServiceModel.ClientBase<lab7b_forms.DictionaryService.IDictionaryService>, lab7b_forms.DictionaryService.IDictionaryService {
        
        public DictionaryServiceClient() {
        }
        
        public DictionaryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DictionaryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionaryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionaryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Models.Record[] GetRecords() {
            return base.Channel.GetRecords();
        }
        
        public System.Threading.Tasks.Task<Models.Record[]> GetRecordsAsync() {
            return base.Channel.GetRecordsAsync();
        }
        
        public void AddRecord(string name, string number) {
            base.Channel.AddRecord(name, number);
        }
        
        public System.Threading.Tasks.Task AddRecordAsync(string name, string number) {
            return base.Channel.AddRecordAsync(name, number);
        }
        
        public void UpdRecord(int id, string name, string number) {
            base.Channel.UpdRecord(id, name, number);
        }
        
        public System.Threading.Tasks.Task UpdRecordAsync(int id, string name, string number) {
            return base.Channel.UpdRecordAsync(id, name, number);
        }
        
        public void DelRecord(int id) {
            base.Channel.DelRecord(id);
        }
        
        public System.Threading.Tasks.Task DelRecordAsync(int id) {
            return base.Channel.DelRecordAsync(id);
        }
    }
}
